{"version":3,"sources":["assets/spinner.gif","utils/reducers.js","utils/actions.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","products","categories","currentCategory","cartOpen","cart","reducer","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length","store","createStore","rootReducer","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","useSelector","dispatch","useDispatch","image","name","price","quantity","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","value","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f806bfe3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","//import { useReducer } from \"react\";\n\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nconst initialState = {\n  products: [],\n  categories: [],\n  currentCategory: '',\n  cartOpen: false,\n  cart: []\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\n// export function useProductReducer(initialState) {\n//   return useReducer(reducer, initialState)\n// }\n\nexport default reducer;\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\n//import { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction ProductItem(item) {\n    const state = useSelector(state => state)\n  const dispatch = useDispatch();\n  //const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;\n","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\"\n//import {connect} from \"react-redux\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction ProductList() {\n  const state = useSelector (state => state);\n  const dispatch = useDispatch();\n\n  //const { currentCategory } = props;\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n           type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach((product) => {\n          idbPromise('products', 'put', product);\n        });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n         products: products\n       });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\n// function mapStateToProps (state) {\n//   return {products: state.products, currentCategory: state.currentCategory}\n// }\n\n// export default connect (mapStateToProps) (ProductList);\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n//import { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction CategoryMenu() {\n  //const [state, dispatch] = useStoreContext();\n  const state = useSelector(state => state)\n  const dispatch = useDispatch();\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\n// function mapStateToProps (state) {\n//   return {cart: state.cart, cartOpen: state.cartOpen}\n// }\nexport default CategoryMenu;\n","import React from 'react';\n//import { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useDispatch } from 'react-redux';\n\nconst CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n  //const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { QUERY_CHECKOUT } from \"../../utils/queries\"\nimport { idbPromise } from \"../../utils/helpers\"\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\n//import { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\nimport { useSelector, useDispatch } from 'react-redux';\n// import {connect} from \"react-redux\";\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  //const [state, dispatch] = useStoreContext();\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session })\n      })\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    };\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds }\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span\n          role=\"img\"\n          aria-label=\"trash\">🛒</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>[close]</div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {\n              Auth.loggedIn() ?\n                <button onClick={submitCheckout}>\n                  Checkout\n              </button>\n                :\n                <span>(log in to check out)</span>\n            }\n          </div>\n        </div>\n      ) : (\n          <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n              😱\n          </span>\n          You haven't added anything to your cart yet!\n          </h3>\n        )}\n    </div>\n  );\n};\n\n// function mapStateToProps (state) {\n//   return {cart: state.cart, cartOpen: state.cartOpen}\n// }\n// export default connect (mapStateToProps) (Cart);\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport Cart from \"../components/Cart\";\n//import { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/spinner.gif'\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Detail() {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n // const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\n    }\n  }\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n            <button \n              disabled={!cart.find(p => p._id === currentProduct._id)} \n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n    </>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      } \n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map(item => item._id);\n      \n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n    \n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n        \n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>\n          Thank you for your purchase!\n        </h2>\n        <h2>\n          You will now be redirected to the home page\n        </h2>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Success;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n          </Link>\n\n        {user ? (\n          <>\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          alt={name}\n                          src={`/images/${image}`}\n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      </div>\n\n    </>)\n\n};\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport store from \"./utils/store\";\nimport { Provider } from 'react-redux';\n//import combineReducers from '../../store/reducers';\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\n//import { StoreProvider } from \"./utils/GlobalState\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          {/* <StoreProvider> */}\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          {/* </StoreProvider> */}\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./utils/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}